@page "/chapter/{id:int}"
@model PRN_MANGA_PROJECT.Pages.Chapter.ReaderModel
@{
    ViewData["Title"] = Model.Chapter?.Title ?? "Chapter Reader";
}

<div class="chapter-reader-container">
    <!-- Top Navigation Bar -->
    <div class="reader-navbar">
        <div class="navbar-content">
            <div class="navbar-left">
                <a href="/manga/@Model.Chapter?.MangaId/chapters" class="btn btn-link text-light">
                    <i class="fas fa-arrow-left"></i>
                    Back
                </a>
                <div class="chapter-info">
                    <h5 class="chapter-title text-light">@Model.Chapter?.Title</h5>
                    @if (!string.IsNullOrEmpty(Model.Chapter?.ChapterNumber))
                    {
                        <span class="chapter-number text-light">Chapter @Model.Chapter.ChapterNumber</span>
                    }
                </div>
            </div>
            <div class="navbar-center">
                <div class="page-navigation">
                    <button id="prevPageBtn" class="btn btn-secondary btn-sm" disabled>
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <span class="text-light mx-2">
                        <span id="currentPage">@(Model.CurrentImageIndex + 1)</span> / <span id="totalPage">@Model.TotalImages</span>
                    </span>
                    <button id="nextPageBtn" class="btn btn-secondary btn-sm" disabled>
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="navbar-right">
                <button id="toggleThemeBtn" class="btn btn-secondary btn-sm me-2">
                    <i class="fas fa-moon"></i>
                </button>
                <button id="fullscreenBtn" class="btn btn-secondary btn-sm">
                    <i class="fas fa-expand"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Chapter Content Area -->
    <div class="chapter-content">
        @if (Model.Chapter != null && Model.Chapter.ChapterImages != null && Model.Chapter.ChapterImages.Any())
        {
            <div id="imageContainer" class="image-container">
                @foreach (var image in Model.Chapter.ChapterImages.OrderBy(i => i.Order))
                {
                    <img src="@image.ImageUrl" alt="Chapter Image" class="chapter-image" data-page="@image.Order" style="display: none;">
                }
            </div>
        }
        else if (!string.IsNullOrEmpty(Model.Chapter?.Content))
        {
            <div class="text-content text-light">
                @Html.Raw(Model.Chapter.Content)
            </div>
        }
        else
        {
            <div class="text-center text-muted py-5">
                <i class="fas fa-exclamation-circle fa-3x mb-3"></i>
                <p>Không có nội dung hoặc hình ảnh cho chapter này.</p>
            </div>
        }
    </div>

    <!-- Bottom Navigation Bar -->
    <div class="reader-navbar bottom-navbar">
        <div class="navbar-content">
            <div class="navbar-left">
                @if (Model.PreviousChapterId.HasValue)
                {
                    <a href="/chapter/@Model.PreviousChapterId" class="btn btn-primary">
                        <i class="fas fa-arrow-left"></i> Chapter trước
                    </a>
                }
            </div>
            <div class="navbar-center">
                <select id="chapterSelect" class="form-select chapter-select">
                    @if (Model.Chapter != null && Model.Chapter.Manga != null && Model.Chapter.Manga.Chapters != null)
                    {
                        @foreach (var chap in Model.Chapter.Manga.Chapters.OrderBy(c => c.ChapterNumber))
                        {
                            <option value="@chap.Id" selected="@(chap.Id == Model.Id)">
                                Chương @(chap.ChapterNumber ?? chap.Id.ToString()) - @chap.Title
                            </option>
                        }
                    }
                </select>
            </div>
            <div class="navbar-right">
                @if (Model.NextChapterId.HasValue)
                {
                    <a href="/chapter/@Model.NextChapterId" class="btn btn-primary">
                        Chapter sau <i class="fas fa-arrow-right"></i>
                    </a>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script>
        var currentImageIndex = @Model.CurrentImageIndex;
        var totalImages = @Model.TotalImages;
        var chapterId = @Model.Id;
        var mangaId = @(Model.Chapter?.MangaId ?? 0);
        var chapterImages = @Html.Raw(Json.Serialize(Model.Chapter?.ChapterImages.OrderBy(i => i.Order).Select(i => i.ImageUrl)));
        var isTextChapter = @(string.IsNullOrEmpty(Model.Chapter?.Content) ? "false" : "true");

        function showImage(index) {
            if (isTextChapter) return;

            $('.chapter-image').hide();
            if (chapterImages && chapterImages.length > 0 && index >= 0 && index < chapterImages.length) {
                $(`.chapter-image[data-page='${index + 1}']`).show();
                $('#currentPage').text(index + 1);
                currentImageIndex = index;
            }
            updateNavigationButtons();
            saveReadingProgress();
        }

        function updateNavigationButtons() {
            if (isTextChapter) {
                $('#prevPageBtn').prop('disabled', true);
                $('#nextPageBtn').prop('disabled', true);
                return;
            }
            $('#prevPageBtn').prop('disabled', currentImageIndex <= 0);
            $('#nextPageBtn').prop('disabled', currentImageIndex >= totalImages - 1);
        }

        function goToNextPage() {
            if (currentImageIndex < totalImages - 1) {
                showImage(currentImageIndex + 1);
            } else if (@Model.NextChapterId.HasValue) {
                window.location.href = '/chapter/@Model.NextChapterId';
            }
        }

        function goToPreviousPage() {
            if (currentImageIndex > 0) {
                showImage(currentImageIndex - 1);
            } else if (@Model.PreviousChapterId.HasValue) {
                window.location.href = '/chapter/@Model.PreviousChapterId';
            }
        }

        function saveReadingProgress() {
            localStorage.setItem(`readingProgress_${chapterId}`, currentImageIndex.toString());
        }

        function loadReadingProgress() {
            var progress = localStorage.getItem(`readingProgress_${chapterId}`);
            if (progress !== null) {
                showImage(parseInt(progress));
            } else {
                showImage(0);
            }
        }

        $(document).ready(function () {
            if (!isTextChapter) {
                loadReadingProgress();
            } else {
                $('#currentPage').text('1');
                $('#totalPage').text('1');
            }

            $('#prevPageBtn').on('click', goToPreviousPage);
            $('#nextPageBtn').on('click', goToNextPage);

            $(document).on('keydown', function (e) {
                if (e.key === 'ArrowRight') {
                    goToNextPage();
                } else if (e.key === 'ArrowLeft') {
                    goToPreviousPage();
                } else if (e.key === 'f' || e.key === 'F') {
                    toggleFullscreen();
                } else if (e.key === 't' || e.key === 'T') {
                    toggleTheme();
                }
            });

            $('#chapterSelect').on('change', function () {
                var selectedChapterId = $(this).val();
                if (selectedChapterId) {
                    window.location.href = '/chapter/' + selectedChapterId;
                }
            });

            // Fullscreen toggle
            $('#fullscreenBtn').on('click', toggleFullscreen);

            function toggleFullscreen() {
                if (!document.fullscreenElement) {
                    document.documentElement.requestFullscreen();
                    $('#fullscreenBtn i').removeClass('fa-expand').addClass('fa-compress');
                } else {
                    document.exitFullscreen();
                    $('#fullscreenBtn i').removeClass('fa-compress').addClass('fa-expand');
                }
            }

            // Theme toggle
            $('#toggleThemeBtn').on('click', toggleTheme);

            function toggleTheme() {
                $('body').toggleClass('dark-theme');
                if ($('body').hasClass('dark-theme')) {
                    localStorage.setItem('theme', 'dark');
                    $('#toggleThemeBtn i').removeClass('fa-moon').addClass('fa-sun');
                } else {
                    localStorage.setItem('theme', 'light');
                    $('#toggleThemeBtn i').removeClass('fa-sun').addClass('fa-moon');
                }
            }

            // Load theme preference
            if (localStorage.getItem('theme') === 'dark') {
                $('body').addClass('dark-theme');
                $('#toggleThemeBtn i').removeClass('fa-moon').addClass('fa-sun');
            }
        });
    </script>
}

<style>
    body {
        background-color: #f0f2f5;
        transition: background-color 0.3s ease;
    }

    body.dark-theme {
        background-color: #1a1a1a;
        color: #e0e0e0;
    }

    .chapter-reader-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
    }

    .reader-navbar {
        background-color: #343a40;
        padding: 10px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .reader-navbar.bottom-navbar {
        margin-top: 20px;
        margin-bottom: 0;
    }

    .navbar-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }

    .navbar-left, .navbar-right, .navbar-center {
        display: flex;
        align-items: center;
    }

    .chapter-info {
        margin-left: 15px;
    }

    .chapter-title {
        margin-bottom: 0;
        font-size: 1.2rem;
    }

    .chapter-number {
        font-size: 0.9rem;
        opacity: 0.8;
    }

    .page-navigation .btn {
        width: 35px;
        height: 35px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .chapter-select {
        width: 200px;
        margin: 0 10px;
        background-color: #495057;
        color: #fff;
        border: 1px solid #6c757d;
    }

    .chapter-content {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        text-align: center;
    }

    body.dark-theme .chapter-content {
        background-color: #2b2b2b;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    .image-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 10px;
    }

    .chapter-image {
        max-width: 100%;
        height: auto;
        display: block;
        margin: 0 auto;
    }

    .text-content {
        padding: 20px;
        line-height: 1.6;
        font-size: 1.1rem;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .reader-navbar {
            flex-direction: column;
            padding: 10px;
        }

        .navbar-content {
            flex-direction: column;
        }

        .navbar-left, .navbar-center, .navbar-right {
            margin-bottom: 10px;
        }

        .chapter-info {
            margin-left: 0;
            text-align: center;
        }

        .chapter-select {
            width: 100%;
        }
    }
</style>
