@using Microsoft.AspNetCore.Mvc.RazorPages
@{
    var path = Context?.Request?.Path.Value?.ToLowerInvariant() ?? string.Empty;
    bool isAccount = path.Contains("/admin") && path.Contains("account");
    bool isManga = path.Contains("/admin") && path.Contains("manga");
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Admin</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/app.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PRN_MANGA_PROJECT.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-0">
            <div class="container-fluid">
                <a class="navbar-brand" href="/">Manga Admin</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#adminNavbar" aria-controls="adminNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </nav>
    </header>

    <div class="container-fluid">
        <div class="row">
            <aside class="col-12 col-md-3 col-lg-2 bg-light border-end min-vh-100 p-0">
                <div class="list-group list-group-flush">
                    <a class="list-group-item list-group-item-action @(isAccount ? "active" : "")" href="/admin/account">Account</a>
                    <a class="list-group-item list-group-item-action @(isManga ? "active" : "")" href="/admin/manga">Manga</a>
                </div>
            </aside>
            <main role="main" class="col-12 col-md-9 col-lg-10 p-4">
                @RenderBody()
            </main>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>


