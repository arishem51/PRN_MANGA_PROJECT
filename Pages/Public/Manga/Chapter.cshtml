@page "{chapterId:int}"
@model PRN_MANGA_PROJECT.Pages.Public.Manga.ChapterModel
@{
}

@section Styles {
	<link rel="stylesheet" href="~/css/Comment.css" />
	<style>
		.chapter-navigation {
			background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
			border-radius: 10px;
			padding: 20px;
			margin: 20px 0;
			box-shadow: 0 4px 15px rgba(0,0,0,0.1);
		}
		
		.navigation-instruction {
			background: rgba(255,255,255,0.9);
			border-radius: 8px;
			padding: 15px;
			margin-bottom: 20px;
			text-align: center;
			font-style: italic;
			color: #333;
			font-size: 16px;
		}
		
		.nav-buttons {
			display: flex;
			justify-content: center;
			gap: 20px;
		}
		
		.nav-btn {
			padding: 12px 24px;
			border: none;
			border-radius: 8px;
			font-size: 16px;
			font-weight: 600;
			text-decoration: none;
			transition: all 0.3s ease;
			display: inline-flex;
			align-items: center;
			gap: 8px;
		}
		
		.nav-btn:hover {
			transform: translateY(-2px);
			box-shadow: 0 6px 20px rgba(0,0,0,0.2);
		}
		
		.nav-btn.prev {
			background: #6c757d;
			color: white;
		}
		
		.nav-btn.next {
			background: #007bff;
			color: white;
		}
		
		.nav-btn:disabled {
			background: #e9ecef;
			color: #6c757d;
			cursor: not-allowed;
			transform: none;
		}
		
		.nav-btn:disabled:hover {
			transform: none;
			box-shadow: none;
		}
		
		/* Bottom Navigation Bar */
		.bottom-navigation-bar {
			position: fixed;
			bottom: 0;
			left: 0;
			right: 0;
			background: #1a1a1a;
			padding: 15px 20px;
			display: flex;
			align-items: center;
			justify-content: space-between;
			box-shadow: 0 -2px 10px rgba(0,0,0,0.5);
			z-index: 1000;
			border-top: 1px solid #333;
			height: 70px;
			gap: 20px;
		}
		
		.nav-item {
			display: flex;
			align-items: center;
			gap: 6px;
			color: white;
			text-decoration: none;
			font-size: 14px;
			font-weight: 500;
			transition: all 0.3s ease;
			padding: 8px 12px;
			border-radius: 8px;
			background: transparent;
			flex: 0 0 auto;
		}
		
		.nav-item:hover {
			background: rgba(255,255,255,0.1);
		}
		
		
		/* Follow Button */
		.follow-btn {
			background: transparent;
			color: white;
			border: none;
			padding: 8px 12px;
			border-radius: 8px;
			font-size: 14px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s ease;
			display: flex;
			align-items: center;
			gap: 6px;
			flex: 0 0 auto;
		}
		
		.follow-btn:hover {
			background: rgba(255,255,255,0.1);
			color: #e74c3c;
		}
		
		.follow-btn.following {
			background: #e74c3c;
			color: white;
		}
		
		.follow-btn.following:hover {
			background: #c0392b;
		}
		
		/* Scroll to Top Button */
		.scroll-to-top-btn {
			background: transparent;
			color: white;
			border: none;
			padding: 8px 12px;
			border-radius: 8px;
			font-size: 14px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s ease;
			display: none;
			align-items: center;
			gap: 6px;
			flex: 0 0 auto;
		}
		
		.scroll-to-top-btn:hover {
			background: rgba(255,255,255,0.1);
			color: #3498db;
		}
		
		/* Navigation Button Positioning */
		.nav-item:first-child {
			order: 1;
		}
		
		.follow-btn {
			order: 2;
		}
		
		.scroll-to-top-btn {
			order: 4;
		}
		
		.chapter-nav-center {
			order: 2;
		}
		
		.follow-btn {
			order: 3;
		}
		
		.nav-item {
			display: flex;
			align-items: center;
			gap: 6px;
			color: white;
			text-decoration: none;
			font-size: 12px;
			font-weight: 500;
			transition: all 0.3s ease;
			padding: 4px 8px;
			border-radius: 6px;
			background: transparent;
			flex: 0 0 auto;
		}
		
		.nav-item:hover {
			color: #3498db;
			background: rgba(255,255,255,0.1);
		}
		
		.nav-item i {
			font-size: 18px;
		}
		
		
		/* Chapter Navigation Center */
		.chapter-nav-center {
			display: flex;
			align-items: center;
			gap: 6px;
			background: transparent;
			padding: 0;
			border-radius: 0;
			position: relative;
			flex: 1;
			justify-content: center;
			min-width: auto;
			max-width: none;
			order: 3;
		}
		
		.chapter-nav-btn {
			background: white;
			border: 1px solid #ddd;
			color: #333;
			width: 32px;
			height: 32px;
			border-radius: 6px;
			display: flex;
			align-items: center;
			justify-content: center;
			font-size: 16px;
			cursor: pointer;
			transition: all 0.3s ease;
			text-decoration: none;
			margin: 0;
			position: relative;
			z-index: 10;
		}
		
		.chapter-nav-btn:first-child {
			margin-right: -2px;
		}
		
		.chapter-nav-btn:last-child {
			margin-left: -2px;
		}
		
		.chapter-nav-btn:hover {
			background: #f0f0f0;
			color: #333;
			border-color: #999;
		}
		
		.chapter-nav-btn:disabled {
			opacity: 0.5;
			cursor: not-allowed;
			transform: none;
		}
		
		.chapter-nav-btn:disabled:hover {
			background: transparent;
			color: white;
			transform: none;
		}
		
		/* Chapter Dropdown */
		.chapter-dropdown {
			position: relative;
			display: inline-block;
			width: auto;
			text-align: center;
		}
		
		.chapter-title {
			color: #333;
			font-size: 16px;
			font-weight: 600;
			min-width: 120px;
			max-width: 150px;
			text-align: center;
			cursor: pointer;
			padding: 8px 12px;
			border-radius: 6px;
			transition: all 0.3s ease;
			display: inline-block;
			background: white;
			border: 1px solid #ddd;
			height: 32px;
			display: flex;
			align-items: center;
			justify-content: center;
		}
		
		.chapter-title:hover {
			background: #f0f0f0;
			border-color: #999;
		}
		
		.chapter-dropdown-content {
			display: none;
			position: absolute;
			bottom: 100%;
			left: 50%;
			transform: translateX(-50%);
			background: white;
			width: 200px;
			max-height: 300px;
			overflow-y: auto;
			box-shadow: 0 4px 12px rgba(0,0,0,0.15);
			border-radius: 8px;
			z-index: 1001;
			margin-bottom: 5px;
			border: 1px solid #ddd;
			padding: 0;
		}
		
		.chapter-dropdown-content.show {
			display: block;
		}
		
		/* Search Input */
		.chapter-search-input {
			width: 100%;
			padding: 8px 12px;
			border: none;
			border-bottom: 1px solid #eee;
			font-size: 16px;
			outline: none;
			background: #f8f9fa;
			border-radius: 8px 8px 0 0;
		}
		
		.chapter-search-input::placeholder {
			color: #999;
		}
		
		/* Chapter List Container */
		.chapter-list-container {
			max-height: 250px;
			overflow-y: auto;
		}
		
		.chapter-dropdown-item {
			color: #333;
			padding: 10px 14px;
			text-decoration: none;
			display: block;
			border-bottom: 1px solid #eee;
			transition: all 0.3s ease;
			font-size: 16px;
			text-align: center;
		}
		
		.chapter-dropdown-item:hover {
			background: #f8f9fa;
			color: #007bff;
		}
		
		.chapter-dropdown-item.current {
			background: #fff3cd;
			color: #856404;
			border-left: 3px solid #ffc107;
		}
		
		.chapter-dropdown-item.current:hover {
			background: #ffeaa7;
			color: #856404;
		}
		
		.chapter-dropdown-item:last-child {
			border-bottom: none;
		}
		
		.chapter-dropdown-item.current {
			background: #007bff;
			color: white;
		}
		
		/* Follow Button */
		.follow-btn {
			background: transparent;
			color: white;
			border: none;
			padding: 8px 12px;
			border-radius: 8px;
			font-size: 14px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s ease;
			display: flex;
			align-items: center;
			gap: 6px;
			flex: 0 0 auto;
		}
		
		.follow-btn:hover {
			background: rgba(255,255,255,0.1);
			color: #e74c3c;
		}
		
		.follow-btn.following {
			background: #27ae60;
		}
		
		.follow-btn.following:hover {
			background: #229954;
		}
		
		/* Scroll to Top Button */
		.scroll-to-top {
			background: #95a5a6;
			color: white;
			border: none;
			width: 40px;
			height: 40px;
			border-radius: 50%;
			font-size: 18px;
			cursor: pointer;
			transition: all 0.3s ease;
			display: flex;
			align-items: center;
			justify-content: center;
		}
		
		.scroll-to-top:hover {
			background: #7f8c8d;
			transform: translateY(-2px);
		}
		
		/* Body padding to prevent content overlap */
		body {
			padding-bottom: 90px;
		}
		
		.chapter-images {
			display: flex;
			flex-direction: column;
			align-items: center;
		}
		
		.chapter-image-container {
			text-align: center;
			width: 100%;
		}
		
		.chapter-image-container img {
			max-width: 100%;
			height: auto;
			display: block;
			margin: 0 auto;
		}
		
		/* Responsive */
		@@media (max-width: 768px) {
			.bottom-navigation-bar {
				flex-direction: column;
				gap: 8px;
				padding: 10px 12px;
				height: auto;
			}
			
			.nav-item:first-child {
				order: 1;
			}
			
			.chapter-nav-center {
				order: 2;
				width: 100%;
				min-width: auto;
				max-width: none;
				gap: 6px;
			}
			
			.follow-btn {
				order: 3;
			}
			
			.chapter-dropdown-content {
				bottom: 100%;
				left: 50%;
				transform: translateX(-50%);
				width: 100px;
			}
			
			body {
				padding-bottom: 120px;
			}
		}
	</style>
}
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">

<!-- Chapter Navigation -->
<div class="chapter-navigation">
	<div class="navigation-instruction">
		Sử dụng mũi tên trái (←) hoặc phải (→) để chuyển chapter
	</div>
	
	<div class="nav-buttons">
		@if (Model.PreviousChapterId.HasValue)
		{
			<a href="/Public/Manga/Chapter/@Model.PreviousChapterId" class="nav-btn prev">
				<i class="fa fa-arrow-left"></i>
				Chap Trước
			</a>
		}
		else
		{
			<button class="nav-btn prev" disabled>
				<i class="fa fa-arrow-left"></i>
				Chap Trước
			</button>
		}
		
		@if (Model.NextChapterId.HasValue)
		{
			<a href="/Public/Manga/Chapter/@Model.NextChapterId" class="nav-btn next">
				Chap Sau
				<i class="fa fa-arrow-right"></i>
			</a>
		}
		else
		{
			<button class="nav-btn next" disabled>
				Chap Sau
				<i class="fa fa-arrow-right"></i>
			</button>
		}
	</div>
</div>

<!-- Bottom Navigation Bar -->
<div class="bottom-navigation-bar">
	<!-- Trang Chủ -->
	<a href="/" class="nav-item">
		<i class="fa fa-home"></i>
		<span>Trang Chủ</span>
	</a>
	
	<!-- Chapter Navigation Center -->
	<div class="chapter-nav-center">
		@if (Model.PreviousChapterId.HasValue)
		{
			<a href="/Public/Manga/Chapter/@Model.PreviousChapterId" class="chapter-nav-btn">
				<i class="fa fa-chevron-left"></i>
			</a>
		}
		else
		{
			<button class="chapter-nav-btn" disabled>
				<i class="fa fa-chevron-left"></i>
			</button>
		}
		
		<!-- Chapter Dropdown -->
		<div class="chapter-dropdown">
			<div class="chapter-title" onclick="toggleChapterDropdown()">
				Chapter @Model.Chapter.ChapterNumber
			</div>
			<div class="chapter-dropdown-content" id="chapterDropdown">
				<!-- Search Input -->
				<input type="text" class="chapter-search-input" placeholder="Nhập số chương" id="chapterSearch" onkeyup="filterChapters()">
				
				<!-- Chapter List -->
				<div class="chapter-list-container">
					@{
						var allChapters = Model.AllChapters ?? new List<Models.Entities.Chapter>();
					}
					@foreach (var chapter in allChapters.OrderByDescending(c => c.ChapterNumber))
					{
						<a href="/Public/Manga/Chapter/@chapter.Id" 
						   class="chapter-dropdown-item @(chapter.Id == Model.Chapter.Id ? "current" : "")" 
						   data-chapter-number="@chapter.ChapterNumber">
							Chương @chapter.ChapterNumber
						</a>
					}
				</div>
			</div>
		</div>
		
		@if (Model.NextChapterId.HasValue)
		{
			<a href="/Public/Manga/Chapter/@Model.NextChapterId" class="chapter-nav-btn">
				<i class="fa fa-chevron-right"></i>
			</a>
		}
		else
		{
			<button class="chapter-nav-btn" disabled>
				<i class="fa fa-chevron-right"></i>
			</button>
		}
	</div>
	
	<!-- Theo Dõi -->
	<button class="follow-btn" onclick="toggleFollow()">
		<i class="fa fa-bookmark"></i>
		<span>Theo Dõi</span>
	</button>
	
	<!-- Scroll to Top Button -->
	<button class="scroll-to-top-btn" onclick="scrollToTop()">
		<i class="fa fa-arrow-up"></i>
	</button>
</div>

<div>
	<h1>@Model.Chapter.Title</h1>
	
	@if (Model.ChapterImages != null && Model.ChapterImages.Any())
	{
		<div class="chapter-images">
			@foreach (var image in Model.ChapterImages)
			{
				<div class="chapter-image-container mb-3">
					<img src="@image.ImageUrl" alt="Chapter Image @image.PageNumber" class="img-fluid" />
				</div>
			}
		</div>
	}
	else if (!string.IsNullOrEmpty(Model.Chapter.Content))
	{
		<div class="chapter-content">
			@Html.Raw(Model.Chapter.Content)
		</div>
	}
	else
	{
		<div class="alert alert-warning">
			<p>Không có nội dung hoặc hình ảnh cho chapter này.</p>
		</div>
	}
</div>

<form method="post" asp-page-handler="Comment">
	<div class="panel">
		<div class="panel-body">
			<input type="hidden" asp-for="Input.ChapterId" value="@Model.Chapter.Id" />
			<textarea class="form-control" rows="2" placeholder="What are you thinking?" asp-for="Input.Content"></textarea>
			<div class="mar-top clearfix">
				<button class="btn btn-sm btn-primary pull-right" type="submit"><i class="fa fa-pencil fa-fw"></i> Share</button>
				<a class="btn btn-trans btn-icon fa fa-video-camera add-tooltip" href="#"></a>
				<a class="btn btn-trans btn-icon fa fa-camera add-tooltip" href="#"></a>
				<a class="btn btn-trans btn-icon fa fa-file add-tooltip" href="#"></a>
			</div>
		</div>
	</div>
</form>


<partial name="~/Pages/Shared/Partial/_CommentPartial.cshtml" model="@Model.Comments"/>

@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			// Keyboard navigation
			document.addEventListener('keydown', function(e) {
				// Left arrow key - Previous chapter
				if (e.key === 'ArrowLeft' && @(Model.PreviousChapterId?.ToString() ?? "null") !== null) {
					window.location.href = '/Public/Manga/Chapter/@Model.PreviousChapterId';
				}
				// Right arrow key - Next chapter
				else if (e.key === 'ArrowRight' && @(Model.NextChapterId?.ToString() ?? "null") !== null) {
					window.location.href = '/Public/Manga/Chapter/@Model.NextChapterId';
				}
				// Home key - Go to homepage
				else if (e.key === 'Home') {
					window.location.href = '/';
				}
				// Escape key - Close dropdown
				else if (e.key === 'Escape') {
					closeChapterDropdown();
				}
			});
			
			// Close dropdown when clicking outside
			document.addEventListener('click', function(e) {
				const dropdown = document.getElementById('chapterDropdown');
				const title = document.querySelector('.chapter-title');
				if (dropdown && !dropdown.contains(e.target) && !title.contains(e.target)) {
					closeChapterDropdown();
				}
			});
		});
		
		// Toggle chapter dropdown
		function toggleChapterDropdown() {
			const dropdown = document.getElementById('chapterDropdown');
			if (dropdown.classList.contains('show')) {
				closeChapterDropdown();
			} else {
				openChapterDropdown();
			}
		}
		
		function openChapterDropdown() {
			const dropdown = document.getElementById('chapterDropdown');
			dropdown.classList.add('show');
			
			// Focus on search input when dropdown opens
			setTimeout(function() {
				const searchInput = document.getElementById('chapterSearch');
				if (searchInput) {
					searchInput.focus();
				}
			}, 100);
		}
		
		function closeChapterDropdown() {
			const dropdown = document.getElementById('chapterDropdown');
			dropdown.classList.remove('show');
			
			// Clear search input when closing
			const searchInput = document.getElementById('chapterSearch');
			if (searchInput) {
				searchInput.value = '';
				filterChapters(); // Reset filter
			}
		}
		
		function filterChapters() {
			const searchTerm = document.getElementById('chapterSearch').value.toLowerCase();
			const items = document.querySelectorAll('.chapter-dropdown-item');
			
			items.forEach(function(item) {
				const chapterNumber = item.getAttribute('data-chapter-number');
				if (chapterNumber && chapterNumber.toLowerCase().includes(searchTerm)) {
					item.style.display = 'block';
				} else {
					item.style.display = 'none';
				}
			});
		}
		
		// Toggle follow button
		function toggleFollow() {
			const followBtn = document.querySelector('.follow-btn');
			if (followBtn.classList.contains('following')) {
				followBtn.classList.remove('following');
				followBtn.innerHTML = '<i class="fa fa-bookmark"></i><span>Theo Dõi</span>';
			} else {
				followBtn.classList.add('following');
				followBtn.innerHTML = '<i class="fa fa-check"></i><span>Đã Theo Dõi</span>';
			}
		}
		
		// Scroll to top function
		function scrollToTop() {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
		}
		
		
		// Show/hide scroll to top button based on scroll position
		window.addEventListener('scroll', function() {
			const scrollBtn = document.querySelector('.scroll-to-top');
			if (scrollBtn && window.pageYOffset > 300) {
				scrollBtn.style.display = 'flex';
			} else if (scrollBtn) {
				scrollBtn.style.display = 'none';
			}
		});
	</script>
}