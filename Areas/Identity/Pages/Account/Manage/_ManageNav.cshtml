@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var hasPassword = false;

    if (User?.Identity?.IsAuthenticated ?? false)
    {

        var user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            hasPassword = await UserManager.HasPasswordAsync(user);
        }
    }
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>

    @if (User?.Identity?.IsAuthenticated ?? false)
    {
        if (hasPassword)
        {
            <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
        }
        else
        {
            <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="set-password" asp-page="./SetPassword">Set password</a></li>
        }
    }
</ul>
